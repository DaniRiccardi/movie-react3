{"ast":null,"code":"var _jsxFileName = \"/home/operador/Documentos/cursoreact/movie-react/src/pages/movie/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Row, Col, Button } from \"antd\"; // para obtener los parametros de la url\n\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport useFetch from \"../../hooks/useFetch\"; // Credenciales\n\nimport { URL_API, API } from \"../../utils/constants\";\nimport Loading from \"../../components/Loading\";\nimport \"./movie.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  // Obtenemos el id de la peli\n  // const params = useParams();\n  // console.log(params);\n  // const id = params.id\n  const {\n    id\n  } = useParams();\n  const movieInfo = useFetch(`${URL_API}/movie/${id}?api_key=${API}&language=es-ES`);\n  console.log(\"movieInfo: \", movieInfo);\n\n  if (movieInfo.loading || !movieInfo.result) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RenderMovie, {\n    movie: movieInfo.result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Movie, \"LM3QrxLCADxpfum0j3SdJJ7iu3g=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nfunction RenderMovie(props) {\n  const {\n    movie\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Estamos en la pel\\xEDcula \", movie.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RenderMovie;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Movie\");\n$RefreshReg$(_c2, \"RenderMovie\");","map":{"version":3,"sources":["/home/operador/Documentos/cursoreact/movie-react/src/pages/movie/index.js"],"names":["React","Row","Col","Button","useParams","moment","useFetch","URL_API","API","Loading","Movie","id","movieInfo","console","log","loading","result","RenderMovie","props","movie","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,MAAjC,C,CACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB,C,CACA;;AACA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,uBAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA;AACA;AAEA;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAxB;AAEA,QAAMQ,SAAS,GAAGN,QAAQ,CACvB,GAAEC,OAAQ,UAASI,EAAG,YAAWH,GAAI,iBADd,CAA1B;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;;AAEA,MAAIA,SAAS,CAACG,OAAV,IAAqB,CAACH,SAAS,CAACI,MAApC,EAA4C;AAC1C,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,WAAD;AAAa,IAAA,KAAK,EAAEJ,SAAS,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;GAAMN,K;UAOWN,S,EAEGE,Q;;;KATdI,K;AAsBN,eAAeA,KAAf;;AAEA,SAASO,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,sBACE;AAAA,2BACE;AAAA,+CAA4BC,KAAK,CAACC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MARQH,W","sourcesContent":["import React from \"react\";\nimport { Row, Col, Button } from \"antd\";\n// para obtener los parametros de la url\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport useFetch from \"../../hooks/useFetch\";\n// Credenciales\nimport { URL_API, API } from \"../../utils/constants\";\nimport Loading from \"../../components/Loading\";\n\nimport \"./movie.scss\";\n\nconst Movie = () => {\n  // Obtenemos el id de la peli\n  // const params = useParams();\n  // console.log(params);\n\n  // const id = params.id\n\n  const { id } = useParams();\n\n  const movieInfo = useFetch(\n    `${URL_API}/movie/${id}?api_key=${API}&language=es-ES`\n  );\n\n  console.log(\"movieInfo: \", movieInfo);\n\n  if (movieInfo.loading || !movieInfo.result) {\n    return <Loading />;\n  }\n\n  return <RenderMovie movie={movieInfo.result} />;\n};\n\nexport default Movie;\n\nfunction RenderMovie(props) {\n  const { movie } = props;\n\n  return (\n    <div>\n      <h1>Estamos en la pel√≠cula {movie.title}</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}