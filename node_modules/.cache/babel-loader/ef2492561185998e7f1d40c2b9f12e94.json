{"ast":null,"code":"var _jsxFileName = \"/home/operador/Documentos/cursoreact/movie-react/src/pages/new-movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { URL_API, API } from \"../utils/constants\";\nimport useFetch from \"../hooks/useFetch\";\nimport Footer from \"../components/FOoter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewMovies = () => {\n  _s();\n\n  // Lista de películas\n  const [movieList, setMovieList] = useState([]); // estado paginación\n\n  const [page, setPage] = useState(1); // ${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1\n\n  console.log(URL_API);\n  console.log(API);\n  const response1 = useFetch(`${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1`);\n  console.log(\"response1: \", response1);\n  useEffect(() => {\n    // función asíncrona\n    (async () => {\n      /*\n      const response = await fetch(\n        `${URL_API}/movie/now_playing?api_key=${API}$language=es-ES&page=${page}`\n      );\n       const movies = await response.json();\n       console.log(movies); */\n      setMovieList(response1);\n    })();\n  }, [page]); //setMovieList(response1);\n\n  /*\n  const consultar = async () => {\n    const response = await fetch(\n      `${URL_API}/movie/now_playing?api_key=${API}$language=es-ES&page=${page}`\n    );\n     const res = response.json();\n     console.log(\"response: \", response);\n  };\n  */\n  //\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: \"24\",\n      style: {\n        textAlign: \"center\",\n        marginTop: 25\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: 35,\n          fontWeight: \"bold\"\n        },\n        children: \"\\xFAltimos lanzamientos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: \"24\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: \"Todas las pel\\xEDculas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: \"24\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewMovies, \"ZBwrRt2qHbl1LRYWyfox178dzzQ=\", false, function () {\n  return [useFetch];\n});\n\n_c = NewMovies;\nexport default NewMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMovies\");","map":{"version":3,"sources":["/home/operador/Documentos/cursoreact/movie-react/src/pages/new-movies.js"],"names":["React","useState","useEffect","Row","Col","URL_API","API","useFetch","Footer","NewMovies","movieList","setMovieList","page","setPage","console","log","response1","textAlign","marginTop","fontSize","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,oBAA7B;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CAFsB,CAGtB;;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC,CAJsB,CAMtB;;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAEA,QAAMU,SAAS,GAAGT,QAAQ,CACvB,GAAEF,OAAQ,8BAA6BC,GAAI,wBADpB,CAA1B;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,KAAC,YAAY;AACX;AACN;AACA;AACA;AACA;AACA;AAGMS,MAAAA,YAAY,CAACK,SAAD,CAAZ;AACD,KAVD;AAWD,GAbQ,EAaN,CAACJ,IAAD,CAbM,CAAT,CAjBsB,CAgCtB;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIE;;AAEA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,IAAV;AAAe,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,SAAS,EAAE;AAAlC,OAAtB;AAAA,6BACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,UAAU,EAAE;AAA5B,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,IAAV;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/DD;;GAAMX,S;UAWcF,Q;;;KAXdE,S;AAiEN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport { URL_API, API } from \"../utils/constants\";\n\nimport useFetch from \"../hooks/useFetch\";\n\nimport Footer from \"../components/FOoter\";\n\nconst NewMovies = () => {\n  // Lista de películas\n  const [movieList, setMovieList] = useState([]);\n  // estado paginación\n  const [page, setPage] = useState(1);\n\n  // ${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1\n\n  console.log(URL_API);\n  console.log(API);\n\n  const response1 = useFetch(\n    `${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1`\n  );\n\n  console.log(\"response1: \", response1);\n\n  useEffect(() => {\n    // función asíncrona\n    (async () => {\n      /*\n      const response = await fetch(\n        `${URL_API}/movie/now_playing?api_key=${API}$language=es-ES&page=${page}`\n      );\n\n      const movies = await response.json();\n\n      console.log(movies); */\n      setMovieList(response1);\n    })();\n  }, [page]);\n\n  //setMovieList(response1);\n\n  /*\n  const consultar = async () => {\n    const response = await fetch(\n      `${URL_API}/movie/now_playing?api_key=${API}$language=es-ES&page=${page}`\n    );\n\n    const res = response.json();\n\n    console.log(\"response: \", response);\n  };\n  */\n\n  //\n\n  return (\n    <Row>\n      <Col span=\"24\" style={{ textAlign: \"center\", marginTop: 25 }}>\n        <h1 style={{ fontSize: 35, fontWeight: \"bold\" }}>\n          últimos lanzamientos\n        </h1>\n      </Col>\n\n      <Col span=\"24\">\n        <Row>Todas las películas</Row>\n      </Col>\n\n      <Col span=\"24\"></Col>\n    </Row>\n  );\n};\n\nexport default NewMovies;\n"]},"metadata":{},"sourceType":"module"}